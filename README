# 환경변수

- DATABASE_URL
- ACCESS_TOKEN_KEY
- REFRESH_TOKEN_KEY

# API 명세서 URL

- https://www.notion.so/RESUME-PROJECT-73fa588efbb64cc9bdc42a8f5bac2c76

# ERD URL

- https://www.notion.so/RESUME-PROJECT-73fa588efbb64cc9bdc42a8f5bac2c76

# 더 고민해 보기

1. **암호화 방식**

   - 비밀번호를 DB에 저장할 때 Hash를 이용했는데, Hash는 단방향 암호화와 양방향 암호화 중 어떤 암호화 방식에 해당할까요? 
   단방향
   - 비밀번호를 그냥 저장하지 않고 Hash 한 값을 저장 했을 때의 좋은 점은 무엇인가요? 
   복호화하기 어렵기 때문에 보안이 더 좋습니다.

2. **인증 방식**

   - JWT(Json Web Token)을 이용해 인증 기능을 했는데, 만약 Access Token이 노출되었을 경우 발생할 수 있는 문제점은 무엇일까요? 
   해당 토큰을 사용하여 인증을 우회할 수 있습니다. 이로 인해 인가되지 않은 사용자가 보호된 자원에 액세스할 수 있습니다.
   - 해당 문제점을 보완하기 위한 방법으로는 어떤 것이 있을까요? 
   토큰의 유효 기간을 최소화합니다.

3. **인증과 인가**

   - 인증과 인가가 무엇인지 각각 설명해 주세요. 
   인증은 사용자가 자신이 주장하는 신원을 확인하는 과정이고, 인가는 인증된 사용자에 대해 특정 리소스 또는 기능에 대한 액세스 권한을 부여하는 프로세스입니다.
   - 과제에서 구현한 Middleware는 인증에 해당하나요? 인가에 해당하나요? 그 이유도 알려주세요. 
   사용자의 refreshToken의 유효성을 검사하고 새롭게 accessToken을 재발급하여 권한을 부여하는 인가(Authorization) 미들웨어입니다.

4. **Http Status Code**

   - 과제를 진행하면서 사용한 Http Status Code를 모두 나열하고, 각각이 의미하는 것과 어떤 상황에 사용했는지 작성해 주세요.

5. **리팩토링**

   - MySQL, Prisma로 개발했는데 MySQL을 MongoDB로 혹은 Prisma 를 TypeORM 로 변경하게 된다면 많은 코드 변경이 필요할까요? 주로 어떤 코드에서 변경이 필요한가요? 
   데이터베이스 간의 데이터 모델이나 스키마의 차이로 인한 모델 정의에서 조정이 필요할 것 같습니다.
   - 만약 이렇게 DB를 변경하는 경우가 또 발생했을 때, 코드 변경을 보다 쉽게 하려면 어떻게 코드를 작성하면 좋을 지 생각나는 방식이 있나요? 있다면 작성해 주세요.

6. **API 명세서**
   - notion 혹은 엑셀에 작성하여 전달하는 것보다 swagger 를 통해 전달하면 장점은 무엇일까요?
   swagger는 명세서를 작성할 수 있는 문서로, 프론트엔드 개발이 완료되지 않은 시점에서도 문서를 활용해 api를 호출할 수 있다는 장점이 있습니다.
